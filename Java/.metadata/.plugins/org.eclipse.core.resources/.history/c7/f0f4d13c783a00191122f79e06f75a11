
public class Matrix {
	static int n; // 矩阵阶数
	 long matrix[][] = new long[n][n];		//不是静态的

	 Matrix multi(Matrix rhs) {
		Matrix ans = new Matrix();
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++)
				if (matrix[i][j] != 0) {
					for (int k = 0; k < n; k++)
						ans.matrix[i][k] += matrix[i][j] * rhs.matrix[j][k];
				}
		}
		return ans;
	}

	Matrix powMod(Matrix M, long m) {
		// 计算矩阵M的m次幂
		Matrix ans = new Matrix();
		for (int i = 0; i < M.n; i++) // 构造单位矩阵
			ans.matrix[i][i] = 1;
		for (; m > 0; m >>= 1) {
			if ((m & 1) == 1)
				ans = ans.multi(M);
			M = M.multi(M);
		}
		return ans;
	}
}
