import java.util.Arrays;
import java.util.Comparator;

import javax.xml.xpath.XPath;

public class Gragh {
	static int maxn=10000;
	static int n,m;
	static int u[]=new int[maxn],v[]=new int[maxn],w[]=new int[maxn];//无向图的边，以及其权值
	static int p[]=new int[maxn];			//用于并查集
	static int r[]=new int[maxn];			//根据权值间接排序，第i小的边的序号保存再r[i]中
	Comparator<Integer> comparator=new Comparator<Integer>() {
		@Override
		public int compare(Integer o1, Integer o2) {
			return Integer.compare(w[o1], w[o2]);
		}
	};
	
	static int find(int x) {
		return p[x]==x?x:p[x]=find(p[x]); 
	}
}
