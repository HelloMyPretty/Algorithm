
public class MyMath {
	static long GCD(long a, long b) {
		return b == 0 ? a : GCD(b, a % b);
	}

	static long lcm(long a, long b) {
		return a / GCD(a, b) * b;
	}

	static int qGCD(int a, int b) {
		if (a == 0)
			return b;
		if (b == 0)
			return a;
		if ((a & 1)==0 && 0==(b & 1))
			return qGCD(a >> 1, b >> 1)<<1;
		else if((b&1)==0)
			return qGCD(a, b>>1);
		else if((a&1)==0) 
			return qGCD(a>>1, b);
		else return qGCD(Math.abs(a-b), Math.min(a, b));
	}
	static long allgcd(long arr[]) {
		int n=arr.length;
		long e,gcd,k;
		k=gcd=1;
		for(int i=0;i<n;i++) {
			e=arr[i];
			gcd=k/GCD(e, k)*e;
			k=gcd;
		}
		return gcd;
	}
	static void exgcd(int a,int b,int d,int x,int y) {
		
	}
	static void f(Integer a) {
		a+=1;
	}
	public static void main(String[] args) {
		Integer a=new Integer(1);
		f(a);
		System.out.println(a);
	}
}
